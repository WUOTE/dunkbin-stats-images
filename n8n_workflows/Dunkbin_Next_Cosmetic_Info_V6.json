{
  "name": "Dunkbin_Next_Cosmetic_Info_V6",
  "nodes": [
    {
      "parameters": {
        "content": "# Dunkbin_Next_Cosmetic_Info_V6",
        "height": 1045.3318259988973,
        "width": 1513.4302600922474,
        "color": 5
      },
      "id": "db4e248c-7480-4f6f-b8bf-65d180c00c6d",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1396.3903219510087,
        357.42197225604514
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Cosmetic name and notes",
              "value": "={{ $json.col_2 }}"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "e71b18f5-fa81-49fc-b32f-2c5c207f1c31",
      "name": "Set Cosmetic and Notes",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1820,
        660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $('Set Cosmetic and Notes').item.json['Cosmetic name and notes'] }}",
              "operation": "notEqual",
              "value2": "Title/notes"
            },
            {
              "value1": "={{ $('Set Cosmetic and Notes').item.json['Cosmetic name and notes'] }}",
              "operation": "isNotEmpty"
            },
            {
              "value1": "={{ $('Set Cosmetic and Notes').item.json['Cosmetic name and notes'] }}",
              "operation": "notEqual",
              "value2": "Twitch ID"
            },
            {
              "value1": "={{ $('Set Cosmetic and Notes').item.json['Cosmetic name and notes'] }}",
              "operation": "notEqual",
              "value2": "Add aliases and IDs to the UserLookup tab"
            }
          ]
        }
      },
      "id": "d2f18e3e-22d6-4f80-85ba-390fc2a2da87",
      "name": "Discard empty",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 1,
      "position": [
        2000,
        660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $('Set Cosmetic and Notes').item.json['Cosmetic name and notes'] }}",
              "operation": "notEqual",
              "value2": 1
            },
            {
              "value1": "={{ $('Set Cosmetic and Notes').item.json['Cosmetic name and notes'] }}",
              "operation": "notEqual"
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 2
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 3
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 4
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 5
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 6
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 7
            }
          ]
        }
      },
      "id": "6d2a8891-c849-4cfc-b215-4d9fbd472c26",
      "name": "Discard Number of Candidate Cosmetics",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 1,
      "position": [
        2180,
        660
      ]
    },
    {
      "parameters": {
        "operation": "limit"
      },
      "id": "b24e34ef-e6ea-498d-aa9d-295fc46f2b59",
      "name": "Keep the Name and Notes only",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 3,
      "position": [
        2360,
        660
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Next Cosmetic Name",
              "value": "={{ $json['Cosmetic name and notes'].split(\"\\n\")[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c8e034a6-e1b2-4241-bb2b-beb0f4bf7bb7",
      "name": "Set Next Cosmetic Name",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        2540,
        660
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Next Cosmetic Artist",
              "value": "={{ $json['Type to search:'] }}"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "a2daed3d-7246-4e99-82b8-ed1e88a9b32c",
      "name": "Set Next Cosmetic Artist",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1820,
        460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "notEqual",
              "value2": "Here is the oldest cosmetic in the backlog by the least-recently added creator, along with any CITB redeems. Change the selector to see each in turn."
            },
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "isNotEmpty"
            },
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "notContains",
              "value2": "If there is a red chip in the top right, select the first number in the list to see the current cosmetic  vvvvv"
            },
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "notEqual",
              "value2": "Preview"
            },
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "notEqual",
              "value2": "Shop candidates:"
            },
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "notEqual",
              "value2": "Creator"
            },
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "notEqual",
              "value2": "Discord alias(es)"
            }
          ]
        }
      },
      "id": "11820125-5065-44f5-9f8d-ed62432465eb",
      "name": "Discard Empty and non-name fields",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 1,
      "position": [
        2000,
        460
      ]
    },
    {
      "parameters": {
        "operation": "limit"
      },
      "id": "019cdfa5-6bf1-47fb-bc08-10476b87f4e8",
      "name": "Keep Next Cosmetic Artist only",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 3,
      "position": [
        2180,
        460
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Next Cosmetic Artist",
              "value": "={{ $json['Next Cosmetic Artist'] }}"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "7dff468f-a963-440f-b0f3-75293ba4993a",
      "name": "Set Next Cosmetic Artist to Save",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        2360,
        460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.stdout }}",
              "operation": "endsWith",
              "value2": "nothing to commit, working tree clean"
            }
          ]
        }
      },
      "id": "8e30347f-e22c-4875-a926-8f17cd180f9e",
      "name": "Should we push to the repo?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2180,
        1080
      ],
      "notesInFlow": false
    },
    {
      "parameters": {
        "command": "=cd /home/node/git/dunkbin-stats-images && git config user.email \"itswuote@gmail.com\" && git config user.name \"WUOTE\" && git add -A && git commit -m \"{{ $json.formattedDate }} update next cosmetic and next cosmetic artist\""
      },
      "id": "da4da752-e079-4503-8782-e1a9234c930a",
      "name": "Git Push",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        2540,
        1220
      ]
    },
    {
      "parameters": {},
      "id": "ced66383-ac0e-4b8d-9b33-162e66b541a9",
      "name": "Do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2720,
        1060
      ]
    },
    {
      "parameters": {
        "command": "=cd ~/git/dunkbin-stats-images && git status"
      },
      "id": "a163eff7-c867-4e29-8b63-83dd1c877b2c",
      "name": "Git Status",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        2000,
        1080
      ]
    },
    {
      "parameters": {
        "command": "=cd ~/git/dunkbin-stats-images && git pull && git fetch"
      },
      "id": "97101c73-e974-45d8-9ab8-42a5371302fd",
      "name": "Git Pull + Fetch",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1820,
        1080
      ]
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "1VscyNGvC_S4mRg_6uMscdXxTDPA1hjEIRkJPOcZjMaQ",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": 1373485552,
          "mode": "list",
          "cachedResultName": "NextCosmetic",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VscyNGvC_S4mRg_6uMscdXxTDPA1hjEIRkJPOcZjMaQ/edit#gid=1373485552"
        },
        "options": {
          "dataLocationOnSheet": {
            "values": {
              "rangeDefinition": "specifyRangeA1",
              "range": "B:D"
            }
          },
          "outputFormatting": {
            "values": {
              "general": "UNFORMATTED_VALUE",
              "date": "FORMATTED_STRING"
            }
          }
        }
      },
      "id": "c93e40aa-b523-48da-a6fe-b83973b2ab86",
      "name": "Google Sheets Artist",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        1640,
        460
      ],
      "alwaysOutputData": false,
      "credentials": {
        "googleApi": {
          "id": "lewjvX7iVXgJ0GW3",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "1VscyNGvC_S4mRg_6uMscdXxTDPA1hjEIRkJPOcZjMaQ",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": 1373485552,
          "mode": "list",
          "cachedResultName": "NextCosmetic",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VscyNGvC_S4mRg_6uMscdXxTDPA1hjEIRkJPOcZjMaQ/edit#gid=1373485552"
        },
        "options": {
          "dataLocationOnSheet": {
            "values": {
              "rangeDefinition": "specifyRangeA1",
              "range": "B:F"
            }
          },
          "outputFormatting": {
            "values": {
              "general": "UNFORMATTED_VALUE",
              "date": "FORMATTED_STRING"
            }
          }
        }
      },
      "id": "3dd858be-ba1b-4fe5-980a-212895891496",
      "name": "Google Sheets Cosmetic",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        1640,
        660
      ],
      "alwaysOutputData": false,
      "credentials": {
        "googleApi": {
          "id": "lewjvX7iVXgJ0GW3",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "1VscyNGvC_S4mRg_6uMscdXxTDPA1hjEIRkJPOcZjMaQ",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": 1373485552,
          "mode": "list",
          "cachedResultName": "NextCosmetic",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VscyNGvC_S4mRg_6uMscdXxTDPA1hjEIRkJPOcZjMaQ/edit#gid=1373485552"
        },
        "options": {
          "dataLocationOnSheet": {
            "values": {
              "rangeDefinition": "specifyRangeA1",
              "range": "F:F"
            }
          },
          "outputFormatting": {
            "values": {
              "general": "UNFORMATTED_VALUE",
              "date": "FORMATTED_STRING"
            }
          }
        }
      },
      "id": "b8407608-557a-4d0e-be7b-e334d50a2cba",
      "name": "Google Sheets Cosmetic Row",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        1640,
        860
      ],
      "alwaysOutputData": false,
      "credentials": {
        "googleApi": {
          "id": "lewjvX7iVXgJ0GW3",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Next Cosmetic Row Number",
              "value": "={{ $json['Row Number'] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7c20d9b0-ac2a-4b56-b24a-7180b4ab6b0d",
      "name": "Next Cosmetic Row Number",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        2180,
        860
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Row Number",
              "value": "={{ $json.col_1 }}"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "4392fda8-5b9f-4e00-bf03-2cb50523bb25",
      "name": "Set Row Number",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1820,
        860
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json['Row Number'] }}",
              "operation": "notEqual",
              "value2": "Redeem Notes"
            },
            {
              "value1": "={{ $json['Row Number'] }}",
              "operation": "isNotEmpty"
            },
            {
              "value1": "={{ $json['Row Number'] }}",
              "operation": "notContains",
              "value2": "http"
            },
            {
              "value1": "={{ $json['Row Number'] }}",
              "operation": "notContains",
              "value2": "discord"
            },
            {
              "value1": "={{ $json['Row Number'] }}",
              "operation": "notContains",
              "value2": "//"
            }
          ]
        }
      },
      "id": "85f43200-de04-4da6-891e-d2780e76fa88",
      "name": "Filter for Row Number",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 1,
      "position": [
        2000,
        860
      ]
    },
    {
      "parameters": {
        "operation": "toFile",
        "fileFormat": "xlsx",
        "options": {
          "compression": false,
          "fileName": "/git/dunkbin-stats-images/dunkbin_next_cosmetic_info.xlsx",
          "headerRow": true,
          "sheetName": "NextCosmeticFullInfo"
        }
      },
      "id": "b7bf03fc-8f6f-4724-bdee-8960757ad2a8",
      "name": "Spreadsheet File",
      "type": "n8n-nodes-base.spreadsheetFile",
      "typeVersion": 1,
      "position": [
        2540,
        860
      ]
    },
    {
      "parameters": {
        "fileName": "/home/node/git/dunkbin-stats-images/public/sheets/dunkbin_next_cosmetic_info.xlsx",
        "options": {
          "append": false
        }
      },
      "id": "6dc6e63b-459f-4bcf-a25a-a4feb3f0d328",
      "name": "Save Next Cosmetic File",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        1640,
        1080
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nmyjson = {\n  CosmeticName : $('Set Next Cosmetic Name').item.json['Next Cosmetic Name'] ,\nCosmeticRow : $('Next Cosmetic Row Number').item.json[\"Next Cosmetic Row Number\"],\nArtist : $('Set Next Cosmetic Artist to Save').item.json[\"Next Cosmetic Artist\"],\n}\n\nreturn myjson;"
      },
      "id": "084ac9eb-d202-48bc-81b9-c4038ca22255",
      "name": "Create JSON from the set variables",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2360,
        860
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "triggerAtMinute": 50
            }
          ]
        }
      },
      "id": "03714989-7fc0-47bf-bf07-ad2a951e5772",
      "name": "Cron For Hourly Execusion",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        1460,
        460
      ]
    },
    {
      "parameters": {
        "authentication": "gitPassword",
        "operation": "push",
        "repositoryPath": "/home/node/git/dunkbin-stats-images",
        "options": {
          "targetRepository": "https://github.com/WUOTE/dunkbin-stats-images"
        }
      },
      "id": "49e87673-067b-4cfe-b5dd-f77c40c36d2d",
      "name": "Git",
      "type": "n8n-nodes-base.git",
      "typeVersion": 1,
      "position": [
        2720,
        1220
      ],
      "credentials": {
        "gitPassword": {
          "id": "dTHUzg0ej1fsHK10",
          "name": "Git account"
        }
      }
    },
    {
      "parameters": {
        "content": "### Background",
        "height": 1160.4144552340342,
        "width": 1753.0552108446911,
        "color": 7
      },
      "id": "2a7ad775-c3e4-4980-87b0-4d3670f91f25",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1300,
        280
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Set Cosmetic and Notes": {
      "main": [
        [
          {
            "node": "Discard empty",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Discard empty": {
      "main": [
        [
          {
            "node": "Discard Number of Candidate Cosmetics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Discard Number of Candidate Cosmetics": {
      "main": [
        [
          {
            "node": "Keep the Name and Notes only",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Keep the Name and Notes only": {
      "main": [
        [
          {
            "node": "Set Next Cosmetic Name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Next Cosmetic Artist": {
      "main": [
        [
          {
            "node": "Discard Empty and non-name fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Discard Empty and non-name fields": {
      "main": [
        [
          {
            "node": "Keep Next Cosmetic Artist only",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Keep Next Cosmetic Artist only": {
      "main": [
        [
          {
            "node": "Set Next Cosmetic Artist to Save",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should we push to the repo?": {
      "main": [
        [
          {
            "node": "Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Git Push",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Git Status": {
      "main": [
        [
          {
            "node": "Should we push to the repo?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Git Pull + Fetch": {
      "main": [
        [
          {
            "node": "Git Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets Artist": {
      "main": [
        [
          {
            "node": "Set Next Cosmetic Artist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets Cosmetic": {
      "main": [
        [
          {
            "node": "Set Cosmetic and Notes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets Cosmetic Row": {
      "main": [
        [
          {
            "node": "Set Row Number",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Row Number": {
      "main": [
        [
          {
            "node": "Filter for Row Number",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Next Cosmetic Artist to Save": {
      "main": [
        [
          {
            "node": "Google Sheets Cosmetic",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Next Cosmetic Name": {
      "main": [
        [
          {
            "node": "Google Sheets Cosmetic Row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter for Row Number": {
      "main": [
        [
          {
            "node": "Next Cosmetic Row Number",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Next Cosmetic Row Number": {
      "main": [
        [
          {
            "node": "Create JSON from the set variables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Spreadsheet File": {
      "main": [
        [
          {
            "node": "Save Next Cosmetic File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Next Cosmetic File": {
      "main": [
        [
          {
            "node": "Git Pull + Fetch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create JSON from the set variables": {
      "main": [
        [
          {
            "node": "Spreadsheet File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cron For Hourly Execusion": {
      "main": [
        [
          {
            "node": "Google Sheets Artist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Git Push": {
      "main": [
        [
          {
            "node": "Git",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d377d3b8-be8a-4474-8bdb-556466a4666a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ca3e26fe66692686fea99a2ff03654b1801275568b864201724e6f6c1d03de1f"
  },
  "id": "3cdnzp2KNzI5vF4r",
  "tags": []
}