{
  "name": "Dunkbin Next Cosmetic Info",
  "nodes": [
    {
      "parameters": {
        "content": "![](https://dunkbinstats.runfast.stream/background/background.png#full-width)",
        "height": 974.4166911412664,
        "width": 1502.9106120794333
      },
      "id": "470af637-6db7-41ed-97b3-c5798a234a20",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        460
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Cosmetic name and notes",
              "value": "={{ $json.col_2 }}"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "5ba78805-1889-4963-be59-630ef7140961",
      "name": "Set Cosmetic and Notes",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        880,
        700
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $('Set Cosmetic and Notes').item.json['Cosmetic name and notes'] }}",
              "operation": "notEqual",
              "value2": "Title/notes"
            },
            {
              "value1": "={{ $('Set Cosmetic and Notes').item.json['Cosmetic name and notes'] }}",
              "operation": "isNotEmpty"
            },
            {
              "value1": "={{ $('Set Cosmetic and Notes').item.json['Cosmetic name and notes'] }}",
              "operation": "notEqual",
              "value2": "Twitch ID"
            },
            {
              "value1": "={{ $('Set Cosmetic and Notes').item.json['Cosmetic name and notes'] }}",
              "operation": "notEqual",
              "value2": "Add aliases and IDs to the UserLookup tab"
            }
          ]
        }
      },
      "id": "1aec888d-084f-4740-bca3-a7d811476370",
      "name": "Discard empty",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 1,
      "position": [
        1060,
        700
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $('Set Cosmetic and Notes').item.json['Cosmetic name and notes'] }}",
              "operation": "notEqual",
              "value2": 1
            },
            {
              "value1": "={{ $('Set Cosmetic and Notes').item.json['Cosmetic name and notes'] }}",
              "operation": "notEqual"
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 2
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 3
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 4
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 5
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 6
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 7
            }
          ]
        }
      },
      "id": "5ae76115-825c-41bb-bfcb-6acef1d7b536",
      "name": "Discard Number of Candidate Cosmetics",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 1,
      "position": [
        1240,
        700
      ]
    },
    {
      "parameters": {
        "operation": "limit"
      },
      "id": "bef02fc8-7d4b-46e7-8146-ae05701cf09b",
      "name": "Keep the Name and Notes only",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 3,
      "position": [
        1420,
        700
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Next Cosmetic Name",
              "value": "={{ $json['Cosmetic name and notes'].split(\"\\n\")[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e4dc6883-efc4-4bc6-81a2-22738e7f035a",
      "name": "Set Next Cosmetic Name",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1600,
        700
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Next Cosmetic Artist",
              "value": "={{ $json['Type to search:'] }}"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "3ae17d6c-6d3d-44e0-9471-330e20a6ef85",
      "name": "Set Next Cosmetic Artist",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        880,
        500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "notEqual",
              "value2": "Here is the oldest cosmetic in the backlog by the least-recently added creator, along with any CITB redeems. Change the selector to see each in turn."
            },
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "isNotEmpty"
            },
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "notContains",
              "value2": "If there is a red chip in the top right, select the first number in the list to see the current cosmetic  vvvvv"
            },
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "notEqual",
              "value2": "Preview"
            },
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "notEqual",
              "value2": "Shop candidates:"
            },
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "notEqual",
              "value2": "Creator"
            },
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "notEqual",
              "value2": "Discord alias(es)"
            }
          ]
        }
      },
      "id": "e847e721-a274-449e-83e8-c68282a21275",
      "name": "Discard Empty and non-name fields",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 1,
      "position": [
        1060,
        500
      ]
    },
    {
      "parameters": {
        "operation": "limit"
      },
      "id": "4520c5ad-3ce8-47fb-84ca-d21d8e3da0b8",
      "name": "Keep Next Cosmetic Artist only",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 3,
      "position": [
        1240,
        500
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Next Cosmetic Artist",
              "value": "={{ $json['Next Cosmetic Artist'] }}"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "3231a84e-e32e-4075-b1f2-9b83d780ac0f",
      "name": "Set Next Cosmetic Artist to Save",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1420,
        500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.stdout }}",
              "operation": "endsWith",
              "value2": "nothing to commit, working tree clean"
            }
          ]
        }
      },
      "id": "4bb3118c-6ff5-4b80-9b48-553a86f831e7",
      "name": "Should we push to the repo?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1060,
        1120
      ],
      "notesInFlow": false
    },
    {
      "parameters": {
        "command": "=cd /home/node/git/dunkbin-stats-images && git config user.email \"itswuote@gmail.com\" && git config user.name \"WUOTE\" && git add -A && git commit -m \"{{ $json.formattedDate }} update next cosmetic and next cosmetic artist\" && git push   "
      },
      "id": "17a4e872-cc98-4a66-b471-3da11dc02fc8",
      "name": "Git Push",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1240,
        1260
      ]
    },
    {
      "parameters": {},
      "id": "aa8082cd-b341-43b1-9894-1bd4d7cfd694",
      "name": "Do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1240,
        1100
      ]
    },
    {
      "parameters": {
        "command": "=cd ~/git/dunkbin-stats-images && git status"
      },
      "id": "25da0219-4444-43fe-96f9-363bdeab8ff9",
      "name": "Git Status",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        880,
        1120
      ]
    },
    {
      "parameters": {
        "command": "=cd ~/git/dunkbin-stats-images && git pull && git fetch"
      },
      "id": "8e9532e2-515d-4db3-9803-01a6809b515c",
      "name": "Git Pull + Fetch",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        700,
        1120
      ]
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "1VscyNGvC_S4mRg_6uMscdXxTDPA1hjEIRkJPOcZjMaQ",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": 1373485552,
          "mode": "list",
          "cachedResultName": "NextCosmetic",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VscyNGvC_S4mRg_6uMscdXxTDPA1hjEIRkJPOcZjMaQ/edit#gid=1373485552"
        },
        "options": {
          "dataLocationOnSheet": {
            "values": {
              "rangeDefinition": "specifyRangeA1",
              "range": "B:D"
            }
          },
          "outputFormatting": {
            "values": {
              "general": "UNFORMATTED_VALUE",
              "date": "FORMATTED_STRING"
            }
          }
        }
      },
      "id": "9a6f9ccc-94c6-4b22-a7ed-3d6088213da0",
      "name": "Google Sheets Artist",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        700,
        500
      ],
      "alwaysOutputData": false,
      "credentials": {
        "googleApi": {
          "id": "PfVPCAHWDVyYiUWG",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "1VscyNGvC_S4mRg_6uMscdXxTDPA1hjEIRkJPOcZjMaQ",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": 1373485552,
          "mode": "list",
          "cachedResultName": "NextCosmetic",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VscyNGvC_S4mRg_6uMscdXxTDPA1hjEIRkJPOcZjMaQ/edit#gid=1373485552"
        },
        "options": {
          "dataLocationOnSheet": {
            "values": {
              "rangeDefinition": "specifyRangeA1",
              "range": "B:F"
            }
          },
          "outputFormatting": {
            "values": {
              "general": "UNFORMATTED_VALUE",
              "date": "FORMATTED_STRING"
            }
          }
        }
      },
      "id": "95fa6c14-bf70-4984-9277-95234294c801",
      "name": "Google Sheets Cosmetic",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        700,
        700
      ],
      "alwaysOutputData": false,
      "credentials": {
        "googleApi": {
          "id": "PfVPCAHWDVyYiUWG",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "1VscyNGvC_S4mRg_6uMscdXxTDPA1hjEIRkJPOcZjMaQ",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": 1373485552,
          "mode": "list",
          "cachedResultName": "NextCosmetic",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VscyNGvC_S4mRg_6uMscdXxTDPA1hjEIRkJPOcZjMaQ/edit#gid=1373485552"
        },
        "options": {
          "dataLocationOnSheet": {
            "values": {
              "rangeDefinition": "specifyRangeA1",
              "range": "F:F"
            }
          },
          "outputFormatting": {
            "values": {
              "general": "UNFORMATTED_VALUE",
              "date": "FORMATTED_STRING"
            }
          }
        }
      },
      "id": "4e01e2af-f180-4767-b304-2fc18ac63f41",
      "name": "Google Sheets Cosmetic Row",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        700,
        900
      ],
      "alwaysOutputData": false,
      "credentials": {
        "googleApi": {
          "id": "PfVPCAHWDVyYiUWG",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Next Cosmetic Row Number",
              "value": "={{ $json['Row Number'] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1b82a571-7a59-4b0b-a4ad-a135aba5ae5e",
      "name": "Next Cosmetic Row Number",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1240,
        900
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Row Number",
              "value": "={{ $json.col_1 }}"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "023f108d-7b46-4edb-bb0d-7e1c4f88a224",
      "name": "Set Row Number",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        880,
        900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json['Row Number'] }}",
              "operation": "notEqual",
              "value2": "Redeem Notes"
            },
            {
              "value1": "={{ $json['Row Number'] }}",
              "operation": "isNotEmpty"
            },
            {
              "value1": "={{ $json['Row Number'] }}",
              "operation": "notContains",
              "value2": "http"
            },
            {
              "value1": "={{ $json['Row Number'] }}",
              "operation": "notContains",
              "value2": "discord"
            },
            {
              "value1": "={{ $json['Row Number'] }}",
              "operation": "notContains",
              "value2": "//"
            }
          ]
        }
      },
      "id": "7fcd6479-9fd9-4470-946d-2d8cfd34e335",
      "name": "Filter for Row Number",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 1,
      "position": [
        1060,
        900
      ]
    },
    {
      "parameters": {
        "operation": "toFile",
        "fileFormat": "xlsx",
        "options": {
          "compression": false,
          "fileName": "/git/dunkbin-stats-images/dunkbin_next_cosmetic_info.xlsx",
          "headerRow": true,
          "sheetName": "NextCosmeticFullInfo"
        }
      },
      "id": "3c5284d1-0760-4d0b-9e89-80f05cde67b7",
      "name": "Spreadsheet File",
      "type": "n8n-nodes-base.spreadsheetFile",
      "typeVersion": 1,
      "position": [
        1600,
        900
      ]
    },
    {
      "parameters": {
        "fileName": "git/dunkbin-stats-images/public/sheets/dunkbin_next_cosmetic_info.xlsx",
        "options": {
          "append": false
        }
      },
      "id": "233414e8-1e3c-4538-a8d1-4d319db8f456",
      "name": "Save Next Cosmetic File",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        1780,
        900
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nmyjson = {\n  CosmeticName : $('Set Next Cosmetic Name').item.json['Next Cosmetic Name'] ,\nCosmeticRow : $('Next Cosmetic Row Number').item.json[\"Next Cosmetic Row Number\"],\nArtist : $('Set Next Cosmetic Artist to Save').item.json[\"Next Cosmetic Artist\"],\n}\n\nreturn myjson;"
      },
      "id": "4094a7d2-7128-42f5-afd2-53e7f7abdc5f",
      "name": "Create JSON from the set variables",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1420,
        900
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "triggerAtMinute": 50
            }
          ]
        }
      },
      "id": "b79f2a16-ad16-42bc-9659-383fdfe42eb4",
      "name": "Cron For Hourly Execusion",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        520,
        500
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Set Cosmetic and Notes": {
      "main": [
        [
          {
            "node": "Discard empty",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Discard empty": {
      "main": [
        [
          {
            "node": "Discard Number of Candidate Cosmetics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Discard Number of Candidate Cosmetics": {
      "main": [
        [
          {
            "node": "Keep the Name and Notes only",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Keep the Name and Notes only": {
      "main": [
        [
          {
            "node": "Set Next Cosmetic Name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Next Cosmetic Artist": {
      "main": [
        [
          {
            "node": "Discard Empty and non-name fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Discard Empty and non-name fields": {
      "main": [
        [
          {
            "node": "Keep Next Cosmetic Artist only",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Keep Next Cosmetic Artist only": {
      "main": [
        [
          {
            "node": "Set Next Cosmetic Artist to Save",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should we push to the repo?": {
      "main": [
        [
          {
            "node": "Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Git Push",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Git Status": {
      "main": [
        [
          {
            "node": "Should we push to the repo?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Git Pull + Fetch": {
      "main": [
        [
          {
            "node": "Git Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets Artist": {
      "main": [
        [
          {
            "node": "Set Next Cosmetic Artist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets Cosmetic": {
      "main": [
        [
          {
            "node": "Set Cosmetic and Notes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets Cosmetic Row": {
      "main": [
        [
          {
            "node": "Set Row Number",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Row Number": {
      "main": [
        [
          {
            "node": "Filter for Row Number",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Next Cosmetic Artist to Save": {
      "main": [
        [
          {
            "node": "Google Sheets Cosmetic",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Next Cosmetic Name": {
      "main": [
        [
          {
            "node": "Google Sheets Cosmetic Row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter for Row Number": {
      "main": [
        [
          {
            "node": "Next Cosmetic Row Number",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Next Cosmetic Row Number": {
      "main": [
        [
          {
            "node": "Create JSON from the set variables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Spreadsheet File": {
      "main": [
        [
          {
            "node": "Save Next Cosmetic File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Next Cosmetic File": {
      "main": [
        [
          {
            "node": "Git Pull + Fetch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create JSON from the set variables": {
      "main": [
        [
          {
            "node": "Spreadsheet File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cron For Hourly Execusion": {
      "main": [
        [
          {
            "node": "Google Sheets Artist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f4a6c75f-c98b-4c68-ab21-82f2cae083b9",
  "id": "WnIiqSTrs4cPQyCH",
  "meta": {
    "instanceId": "c61e0e3e352f4fb3eec73f12593a7bab561e3f4a1e80e6277ec4fb62e761252b"
  },
  "tags": [
    {
      "createdAt": "2023-12-31T00:25:26.596Z",
      "updatedAt": "2023-12-31T00:25:26.596Z",
      "id": "SAvNJ3UYpYOh6u0P",
      "name": "dunkbin"
    }
  ]
}