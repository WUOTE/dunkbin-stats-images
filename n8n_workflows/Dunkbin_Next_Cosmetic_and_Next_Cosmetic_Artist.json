{
  "name": "Dunkbin Next Cosmetic and Next Cosmetic Artist",
  "nodes": [
    {
      "parameters": {
        "content": "![](https://dunkbinstats.runfast.stream/background/background.png#full-width)",
        "height": 779.9160923388715,
        "width": 1695.4854623788347
      },
      "id": "8e1510ae-2be8-418a-b263-03513324e5fc",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        460
      ]
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "1VscyNGvC_S4mRg_6uMscdXxTDPA1hjEIRkJPOcZjMaQ",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": 1373485552,
          "mode": "list",
          "cachedResultName": "NextCosmetic",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VscyNGvC_S4mRg_6uMscdXxTDPA1hjEIRkJPOcZjMaQ/edit#gid=1373485552"
        },
        "options": {
          "dataLocationOnSheet": {
            "values": {
              "rangeDefinition": "specifyRangeA1",
              "range": "B:D"
            }
          },
          "outputFormatting": {
            "values": {
              "general": "UNFORMATTED_VALUE",
              "date": "FORMATTED_STRING"
            }
          }
        }
      },
      "id": "31207bf7-966b-44d2-b5ad-f5c2f4681105",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        700,
        500
      ],
      "alwaysOutputData": false,
      "credentials": {
        "googleApi": {
          "id": "PfVPCAHWDVyYiUWG",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Cosmetic name and notes",
              "value": "={{ $json.col_2 }}"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "847f3fbe-ae7b-4033-99f8-d990a0981913",
      "name": "Set Cosmetic and Notes",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        880,
        700
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": "Title/notes"
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "isNotEmpty"
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": "Twitch ID"
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": "Add aliases and IDs to the UserLookup tab"
            }
          ]
        }
      },
      "id": "2245bd7f-1138-4657-aa90-45839d4d298f",
      "name": "Discard empty",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 1,
      "position": [
        1060,
        700
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 1
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual"
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 2
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 3
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 4
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 5
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 6
            },
            {
              "value1": "={{ $json[\"Cosmetic name and notes\"] }}",
              "operation": "notEqual",
              "value2": 7
            }
          ]
        }
      },
      "id": "457a41fb-9284-4ebe-8db6-787780970312",
      "name": "Discard Number of Candidate Cosmetics",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 1,
      "position": [
        1240,
        700
      ]
    },
    {
      "parameters": {
        "operation": "limit"
      },
      "id": "0bc4c79c-4eee-48e8-8b7f-b789af0925cc",
      "name": "Keep the Name and Notes only",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 3,
      "position": [
        1420,
        700
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Next Cosmetic Name",
              "value": "={{ $json['Cosmetic name and notes'].split(\"\\n\")[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "01b4ba90-cfd9-481a-9108-58516d47e9ba",
      "name": "Set Next Cosmetic Name",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1600,
        700
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Next Cosmetic Artist",
              "value": "={{ $json['Type to search:'] }}"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "76b4383e-8376-4467-8f45-b57bab5959f0",
      "name": "Set Next Cosmetic Artist",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        880,
        500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "notEqual",
              "value2": "Here is the oldest cosmetic in the backlog by the least-recently added creator, along with any CITB redeems. Change the selector to see each in turn."
            },
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "isNotEmpty"
            },
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "notContains",
              "value2": "If there is a red chip in the top right, select the first number in the list to see the current cosmetic  vvvvv"
            },
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "notEqual",
              "value2": "Preview"
            },
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "notEqual",
              "value2": "Shop candidates:"
            },
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "notEqual",
              "value2": "Creator"
            },
            {
              "value1": "={{ $json['Next Cosmetic Artist'] }}",
              "operation": "notEqual",
              "value2": "Discord alias(es)"
            }
          ]
        }
      },
      "id": "02e7ec0e-34c4-4c72-9f1d-e307e906ba57",
      "name": "Discard Empty and non-name fields",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 1,
      "position": [
        1060,
        500
      ]
    },
    {
      "parameters": {
        "operation": "limit"
      },
      "id": "7f802485-ddae-46b1-a3f1-84fd50c3a0cb",
      "name": "Keep Next Cosmetic Artist only",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 3,
      "position": [
        1240,
        500
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Next Cosmetic Artist",
              "value": "={{ $json['Next Cosmetic Artist'] }}"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "313d751a-183e-4e80-a41e-602d93ba6bbf",
      "name": "Set Next Cosmetic Artist to Save",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1420,
        500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.stdout }}",
              "operation": "endsWith",
              "value2": "nothing to commit, working tree clean"
            }
          ]
        }
      },
      "id": "4f22c1d4-9c57-4fa1-8d6f-386faa632154",
      "name": "Should we push to the repo?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1060,
        920
      ],
      "notesInFlow": false
    },
    {
      "parameters": {
        "operation": "toFile",
        "fileFormat": "xlsx",
        "options": {
          "fileName": "/home/node/git/dunkbin-stats-images/dunkbin_next_cosmetic_artist.xlsx",
          "sheetName": "Next_cosmetic_artist"
        }
      },
      "id": "1829e38f-8d16-4fbf-971b-189d2faf463f",
      "name": "Save to Spreadsheet File",
      "type": "n8n-nodes-base.spreadsheetFile",
      "typeVersion": 1,
      "position": [
        1600,
        500
      ]
    },
    {
      "parameters": {
        "fileName": "/home/node/git/dunkbin-stats-images/public/sheets/dunkbin_next_cosmetic_artist.xlsx",
        "options": {
          "append": false
        }
      },
      "id": "41199594-8bfe-4bbb-8b75-db251c642083",
      "name": "Save Next Cosmetic Artist File",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        1780,
        500
      ]
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "1VscyNGvC_S4mRg_6uMscdXxTDPA1hjEIRkJPOcZjMaQ",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": 1373485552,
          "mode": "list",
          "cachedResultName": "NextCosmetic",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VscyNGvC_S4mRg_6uMscdXxTDPA1hjEIRkJPOcZjMaQ/edit#gid=1373485552"
        },
        "options": {
          "dataLocationOnSheet": {
            "values": {
              "rangeDefinition": "specifyRangeA1",
              "range": "B:D"
            }
          },
          "outputFormatting": {
            "values": {
              "general": "UNFORMATTED_VALUE",
              "date": "FORMATTED_STRING"
            }
          }
        }
      },
      "id": "edbbe0d8-fd6f-42b6-a95e-fcb53ae7b9fc",
      "name": "Re-read Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        700,
        700
      ],
      "alwaysOutputData": false,
      "credentials": {
        "googleApi": {
          "id": "PfVPCAHWDVyYiUWG",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "toFile",
        "fileFormat": "xlsx",
        "options": {
          "fileName": "/home/node/git/dunkbin-stats-images/dunkbin_next_cosmetic.xlsx",
          "sheetName": "Next_cosmetic_name"
        }
      },
      "id": "791a8a3b-f64c-4ca6-a45a-c87cf38677b4",
      "name": "Save to a second Spreadsheet File",
      "type": "n8n-nodes-base.spreadsheetFile",
      "typeVersion": 1,
      "position": [
        1780,
        700
      ]
    },
    {
      "parameters": {
        "fileName": "/home/node/git/dunkbin-stats-images/public/sheets/dunkbin_next_cosmetic_name.xlsx",
        "options": {
          "append": false
        }
      },
      "id": "c9d96bff-a0c0-4dbb-bdcb-a5e17cb5c2ac",
      "name": "Save Next Cosmetic File",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        1960,
        700
      ]
    },
    {
      "parameters": {
        "command": "=cd /home/node/git/dunkbin-stats-images && git config user.email \"itswuote@gmail.com\" && git config user.name \"WUOTE\" && git add -A && git commit -m \"{{ $json.formattedDate }} update next cosmetic and next cosmetic artist\" && git push   "
      },
      "id": "1463971f-fa58-40c1-92a0-a0f5dd42f1d3",
      "name": "Git Push",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1240,
        1060
      ]
    },
    {
      "parameters": {},
      "id": "1ac9be99-c2f1-4e62-8a95-1ba840d63d95",
      "name": "Do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1240,
        900
      ]
    },
    {
      "parameters": {
        "command": "=cd /home/node/git/dunkbin-stats-images && git config user.email \"itswuote@gmail.com\" && git config user.name \"WUOTE\" && git status"
      },
      "id": "8902d25c-e3e2-47a2-b588-c27e5c0a1ab3",
      "name": "Git Status",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        880,
        920
      ]
    },
    {
      "parameters": {
        "command": "=cd /home/node/git/dunkbin-stats-images && git config user.email \"itswuote@gmail.com\" && git config user.name \"WUOTE\" && git pull && git fetch"
      },
      "id": "942d3217-fa5f-4020-add9-4450834c0a5b",
      "name": "Git Pull + Fetch",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        700,
        920
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "triggerAtMinute": 33
            }
          ]
        }
      },
      "id": "a467929c-3ac0-436a-9d5a-b0d0cfefb8bb",
      "name": "Cron For Hourly Execusion",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        520,
        500
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Set Next Cosmetic Artist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Cosmetic and Notes": {
      "main": [
        [
          {
            "node": "Discard empty",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Discard empty": {
      "main": [
        [
          {
            "node": "Discard Number of Candidate Cosmetics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Discard Number of Candidate Cosmetics": {
      "main": [
        [
          {
            "node": "Keep the Name and Notes only",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Keep the Name and Notes only": {
      "main": [
        [
          {
            "node": "Set Next Cosmetic Name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Next Cosmetic Artist": {
      "main": [
        [
          {
            "node": "Discard Empty and non-name fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Discard Empty and non-name fields": {
      "main": [
        [
          {
            "node": "Keep Next Cosmetic Artist only",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Keep Next Cosmetic Artist only": {
      "main": [
        [
          {
            "node": "Set Next Cosmetic Artist to Save",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Next Cosmetic Artist to Save": {
      "main": [
        [
          {
            "node": "Save to Spreadsheet File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Next Cosmetic Name": {
      "main": [
        [
          {
            "node": "Save to a second Spreadsheet File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should we push to the repo?": {
      "main": [
        [
          {
            "node": "Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Git Push",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to Spreadsheet File": {
      "main": [
        [
          {
            "node": "Save Next Cosmetic Artist File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Next Cosmetic Artist File": {
      "main": [
        [
          {
            "node": "Re-read Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Re-read Google Sheets": {
      "main": [
        [
          {
            "node": "Set Cosmetic and Notes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to a second Spreadsheet File": {
      "main": [
        [
          {
            "node": "Save Next Cosmetic File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Next Cosmetic File": {
      "main": [
        [
          {
            "node": "Git Pull + Fetch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Git Status": {
      "main": [
        [
          {
            "node": "Should we push to the repo?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Git Pull + Fetch": {
      "main": [
        [
          {
            "node": "Git Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cron For Hourly Execusion": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "67c2ccbd-ed6b-49cc-ad79-f54e6ab2d25f",
  "id": "43sNplTq4nRq8mUq",
  "meta": {
    "instanceId": "c61e0e3e352f4fb3eec73f12593a7bab561e3f4a1e80e6277ec4fb62e761252b"
  },
  "tags": [
    {
      "createdAt": "2023-12-31T00:25:26.596Z",
      "updatedAt": "2023-12-31T00:25:26.596Z",
      "id": "SAvNJ3UYpYOh6u0P",
      "name": "dunkbin"
    }
  ]
}